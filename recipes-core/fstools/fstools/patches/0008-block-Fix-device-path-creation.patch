From 855d5b5d263a61a2294e7cfdbf34fdcafbc737b2 Mon Sep 17 00:00:00 2001
From: Anton Kikin <a.kikin@tano-systems.com>
Date: Wed, 14 Aug 2019 23:04:15 +0300
Subject: [PATCH 08/10] block: Fix device path creation

The device name in the DEVICE environment variable from udev
comes already with the correct prefix '/dev/'. Not need to add
it to the beginning of the device name.

Signed-off-by: Anton Kikin <a.kikin@tano-systems.com>
---
 block.c | 39 ++++++++++++++-------------------------
 1 file changed, 14 insertions(+), 25 deletions(-)

diff --git a/block.c b/block.c
index 878c43a..dfa242d 100644
--- a/block.c
+++ b/block.c
@@ -200,14 +200,6 @@ static char *blobmsg_get_strdup(struct blob_attr *attr)
 	return strdup(blobmsg_get_string(attr));
 }
 
-static char *blobmsg_get_basename(struct blob_attr *attr)
-{
-	if (!attr)
-		return NULL;
-
-	return strdup(basename(blobmsg_get_string(attr)));
-}
-
 static void parse_mount_options(struct mount *m, char *optstr)
 {
 	int i;
@@ -274,7 +266,7 @@ static int mount_add(struct uci_section *s)
 	m->uuid = blobmsg_get_strdup(tb[MOUNT_UUID]);
 	m->label = blobmsg_get_strdup(tb[MOUNT_LABEL]);
 	m->target = blobmsg_get_strdup(tb[MOUNT_TARGET]);
-	m->device = blobmsg_get_basename(tb[MOUNT_DEVICE]);
+	m->device = blobmsg_get_strdup(tb[MOUNT_DEVICE]);
 	if (tb[MOUNT_AUTOFS])
 		m->autofs = blobmsg_get_u32(tb[MOUNT_AUTOFS]);
 	else
@@ -321,7 +313,7 @@ static int swap_add(struct uci_section *s)
 	m->type = TYPE_SWAP;
 	m->uuid = blobmsg_get_strdup(tb[SWAP_UUID]);
 	m->label = blobmsg_get_strdup(tb[SWAP_LABEL]);
-	m->device = blobmsg_get_basename(tb[SWAP_DEVICE]);
+	m->device = blobmsg_get_strdup(tb[SWAP_DEVICE]);
 	if (tb[SWAP_PRIO])
 		m->prio = blobmsg_get_u32(tb[SWAP_PRIO]);
 	if (m->prio)
@@ -569,7 +561,7 @@ static struct probe_info* find_block_info(char *uuid, char *label, char *path)
 
 	if (path)
 		list_for_each_entry(pr, &devices, list)
-			if (pr->dev && !strcmp(basename(pr->dev), basename(path)))
+			if (pr->dev && !strcmp(pr->dev, path))
 				return pr;
 
 	return NULL;
@@ -1034,12 +1026,10 @@ static int mount_device(struct probe_info *pr, int type)
 	if (!pr)
 		return -1;
 
-	device = basename(pr->dev);
-
 	if (!strcmp(pr->type, "swap")) {
 		if ((type == TYPE_HOTPLUG) && !auto_swap)
 			return -1;
-		m = find_swap(pr->uuid, pr->label, device);
+		m = find_swap(pr->uuid, pr->label, pr->dev);
 		if (m || anon_swap)
 			swapon(pr->dev, (m) ? (m->prio) : (0));
 
@@ -1053,7 +1043,7 @@ static int mount_device(struct probe_info *pr, int type)
 		return -1;
 	}
 
-	m = find_block(pr->uuid, pr->label, device, NULL);
+	m = find_block(pr->uuid, pr->label, pr->dev, NULL);
 	if (m && m->extroot)
 	{
 		if (mp)
@@ -1073,7 +1063,9 @@ static int mount_device(struct probe_info *pr, int type)
 		free(mp);
 
 	if (type == TYPE_HOTPLUG)
-		blockd_notify(device, m, pr);
+		blockd_notify(pr->dev, m, pr);
+
+	device = basename(pr->dev);
 
 	/* Check if device should be mounted & set the target directory */
 	if (m) {
@@ -1131,7 +1123,7 @@ static int mount_device(struct probe_info *pr, int type)
 	handle_swapfiles(true);
 
 	if (type != TYPE_AUTOFS)
-		hotplug_call_mount("add", device);
+		hotplug_call_mount("add", pr->dev);
 
 	return 0;
 }
@@ -1146,7 +1138,7 @@ static int umount_device(char *path, int type)
 		return -1;
 
 	if (type != TYPE_AUTOFS)
-		hotplug_call_mount("remove", basename(path));
+		hotplug_call_mount("remove", path);
 
 	err = umount2(mp, MNT_DETACH);
 	if (err) {
@@ -1163,17 +1155,14 @@ static int umount_device(char *path, int type)
 
 static int mount_action(char *action, char *device, int type)
 {
-	char path[32];
-
 	if (!action || !device)
 		return -1;
-	snprintf(path, sizeof(path), "/dev/%s", device);
 
 	if (!strcmp(action, "remove")) {
 		if (type == TYPE_HOTPLUG)
 			blockd_notify(device, NULL, NULL);
 
-		umount_device(path, type);
+		umount_device(device, type);
 
 		return 0;
 	} else if (strcmp(action, "add")) {
@@ -1186,7 +1175,7 @@ static int mount_action(char *action, char *device, int type)
 		return -1;
 	cache_load(0);
 
-	return mount_device(find_block_info(NULL, NULL, path), type);
+	return mount_device(find_block_info(NULL, NULL, device), type);
 }
 
 static int main_hotplug(int argc, char **argv)
@@ -1442,7 +1431,7 @@ static int check_extroot(char *path)
 				return 0;
 
 			ULOG_ERR("extroot: UUID mismatch (root: %s, %s: %s)\n",
-			         pr->uuid, basename(path), uuid);
+			         pr->uuid, path, uuid);
 			return -1;
 		}
 	}
@@ -1640,7 +1629,7 @@ static int main_umount(int argc, char **argv)
 		if (!strcmp(pr->type, "swap"))
 			continue;
 
-		m = find_block(pr->uuid, pr->label, basename(pr->dev), NULL);
+		m = find_block(pr->uuid, pr->label, pr->dev, NULL);
 		if (m && m->extroot)
 			continue;
 
-- 
2.16.2.windows.1

