From 78f810bfefebdf1f56ab85c400fd093be2accf46 Mon Sep 17 00:00:00 2001
From: Anton Kikin <a.kikin@tano-systems.com>
Date: Wed, 14 Aug 2019 23:04:15 +0300
Subject: [PATCH 08/11] block: Fix device path creation

The device name in the DEVICE environment variable from udev
comes already with the correct prefix '/dev/'. Not need to add
it to the beginning of the device name.

Signed-off-by: Anton Kikin <a.kikin@tano-systems.com>
---
 block.c | 27 ++++++++++-----------------
 1 file changed, 10 insertions(+), 17 deletions(-)

diff --git a/block.c b/block.c
index 7ed283d..6a76386 100644
--- a/block.c
+++ b/block.c
@@ -211,14 +211,6 @@ static char *blobmsg_get_strdup(struct blob_attr *attr)
 	return strdup(blobmsg_get_string(attr));
 }
 
-static char *blobmsg_get_basename(struct blob_attr *attr)
-{
-	if (!attr)
-		return NULL;
-
-	return strdup(basename(blobmsg_get_string(attr)));
-}
-
 static void parse_mount_options(struct mount *m, char *optstr)
 {
 	int i;
@@ -285,7 +277,7 @@ static int mount_add(struct uci_section *s)
 	m->uuid = blobmsg_get_strdup(tb[MOUNT_UUID]);
 	m->label = blobmsg_get_strdup(tb[MOUNT_LABEL]);
 	m->target = blobmsg_get_strdup(tb[MOUNT_TARGET]);
-	m->device = blobmsg_get_basename(tb[MOUNT_DEVICE]);
+	m->device = blobmsg_get_strdup(tb[MOUNT_DEVICE]);
 	if (tb[MOUNT_AUTOFS])
 		m->autofs = blobmsg_get_u32(tb[MOUNT_AUTOFS]);
 	else
@@ -332,7 +324,7 @@ static int swap_add(struct uci_section *s)
 	m->type = TYPE_SWAP;
 	m->uuid = blobmsg_get_strdup(tb[SWAP_UUID]);
 	m->label = blobmsg_get_strdup(tb[SWAP_LABEL]);
-	m->device = blobmsg_get_basename(tb[SWAP_DEVICE]);
+	m->device = blobmsg_get_strdup(tb[SWAP_DEVICE]);
 	if (tb[SWAP_PRIO])
 		m->prio = blobmsg_get_u32(tb[SWAP_PRIO]);
 	if (m->prio)
@@ -591,7 +583,7 @@ static struct device* find_block_device(char *uuid, char *label, char *path)
 
 	if (path)
 		vlist_for_each_element(&devices, dev, node)
-			if (dev->pr->dev && !strcmp(basename(dev->pr->dev), basename(path)))
+			if (dev->pr->dev && !strcmp(dev->pr->dev, path))
 				return dev;
 
 	return NULL;
@@ -1082,12 +1074,11 @@ static int mount_device(struct device *dev, int type)
 		return -1;
 
 	pr = dev->pr;
-	device = basename(pr->dev);
 
 	if (!strcmp(pr->type, "swap")) {
 		if ((type == TYPE_HOTPLUG) && !auto_swap)
 			return -1;
-		m = find_swap(pr->uuid, pr->label, device);
+		m = find_swap(pr->uuid, pr->label, pr->dev);
 		if (m || anon_swap)
 			swapon(pr->dev, (m) ? (m->prio) : (0));
 
@@ -1121,7 +1112,9 @@ static int mount_device(struct device *dev, int type)
 		free(mp);
 
 	if (type == TYPE_HOTPLUG)
-		blockd_notify(device, m, pr);
+		blockd_notify(pr->dev, m, pr);
+
+	device = basename(pr->dev);
 
 	/* Check if device should be mounted & set the target directory */
 	if (m) {
@@ -1178,7 +1171,7 @@ static int mount_device(struct device *dev, int type)
 	handle_swapfiles(true);
 
 	if (type != TYPE_AUTOFS)
-		hotplug_call_mount("add", device);
+		hotplug_call_mount("add", pr->dev);
 
 	return 0;
 }
@@ -1195,7 +1188,7 @@ static int umount_device(char *path, int type, bool all)
 		return 0;
 
 	if (type != TYPE_AUTOFS)
-		hotplug_call_mount("remove", basename(path));
+		hotplug_call_mount("remove", path);
 
 	err = umount2(mp, MNT_DETACH);
 	if (err) {
@@ -1512,7 +1505,7 @@ static int check_extroot(char *path)
 				return 0;
 
 			ULOG_ERR("extroot: UUID mismatch (root: %s, %s: %s)\n",
-			         pr->uuid, basename(path), uuid);
+			         pr->uuid, path, uuid);
 			return -1;
 		}
 	}
-- 
2.16.2.windows.1

