From 7674ee13cfaf3a0509d83310fd3902cc3ef10a28 Mon Sep 17 00:00:00 2001
From: Anton Kikin <a.kikin@tano-systems.com>
Date: Tue, 2 Oct 2018 01:40:30 +0300
Subject: [PATCH 2/2] Add 'nocase' option to opkg

Signed-off-by: Anton Kikin <a.kikin@tano-systems.com>
---
 libopkg/opkg_cmd.c  | 18 +++++++++---------
 libopkg/opkg_conf.c |  1 +
 libopkg/opkg_conf.h |  1 +
 src/opkg.c          | 12 +++++++++++-
 4 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/libopkg/opkg_cmd.c b/libopkg/opkg_cmd.c
index d493cf3..a66f856 100644
--- a/libopkg/opkg_cmd.c
+++ b/libopkg/opkg_cmd.c
@@ -373,7 +373,7 @@ static int opkg_configure_packages(char *pkg_name)
     for (i = 0; i < ordered->len; i++) {
         pkg = ordered->pkgs[i];
 
-        if (pkg_name && fnmatch(pkg_name, pkg->name, 0))
+        if (pkg_name && fnmatch(pkg_name, pkg->name, opkg_config->nocase))
             continue;
 
         if (pkg->state_status == SS_UNPACKED) {
@@ -534,8 +534,8 @@ static int opkg_list_find_cmd(int argc, char **argv, int use_desc)
     for (i = 0; i < available->len; i++) {
         pkg = available->pkgs[i];
         /* if we have package name or pattern and pkg does not match, then skip it */
-        if (pkg_name && fnmatch(pkg_name, pkg->name, 0) &&
-           (!use_desc || !pkg->description || fnmatch(pkg_name, pkg->description, 0)))
+        if (pkg_name && fnmatch(pkg_name, pkg->name, opkg_config->nocase) &&
+           (!use_desc || !pkg->description || fnmatch(pkg_name, pkg->description, opkg_config->nocase)))
             continue;
         print_pkg(pkg);
     }
@@ -570,7 +570,7 @@ static int opkg_list_installed_cmd(int argc, char **argv)
     for (i = 0; i < available->len; i++) {
         pkg = available->pkgs[i];
         /* if we have package name or pattern and pkg does not match, then skip it */
-        if (pkg_name && fnmatch(pkg_name, pkg->name, 0))
+        if (pkg_name && fnmatch(pkg_name, pkg->name, opkg_config->nocase))
             continue;
         print_pkg(pkg);
     }
@@ -598,7 +598,7 @@ static int opkg_list_changed_conffiles_cmd(int argc, char **argv)
     for (i = 0; i < available->len; i++) {
         pkg = available->pkgs[i];
         /* if we have package name or pattern and pkg does not match, then skip it */
-        if (pkg_name && fnmatch(pkg_name, pkg->name, 0))
+        if (pkg_name && fnmatch(pkg_name, pkg->name, opkg_config->nocase))
             continue;
         if (nv_pair_list_empty(&pkg->conffiles))
             continue;
@@ -663,7 +663,7 @@ static int opkg_info_status_cmd(int argc, char **argv, int installed_only)
 
     for (i = 0; i < available->len; i++) {
         pkg = available->pkgs[i];
-        if (pkg_name && fnmatch(pkg_name, pkg->name, 0)) {
+        if (pkg_name && fnmatch(pkg_name, pkg->name, opkg_config->nocase)) {
             continue;
         }
 
@@ -876,7 +876,7 @@ static int opkg_depends_cmd(int argc, char **argv)
         for (j = 0; j < available_pkgs->len; j++) {
             pkg = available_pkgs->pkgs[j];
 
-            if (fnmatch(argv[i], pkg->name, 0) != 0)
+            if (fnmatch(argv[i], pkg->name, opkg_config->nocase) != 0)
                 continue;
 
             depends_count = pkg->depends_count + pkg->pre_depends_count +
@@ -1075,7 +1075,7 @@ static int opkg_whatprovides_cmd(int argc, char **argv)
                 int count = pkg->provides_count;
                 for (k = 0; k < count; k++) {
                     abstract_pkg_t *apkg = pkg->provides[k];
-                    if (fnmatch(target, apkg->name, 0) == 0) {
+                    if (fnmatch(target, apkg->name, opkg_config->nocase) == 0) {
                         opkg_msg(NOTICE, "    %s", pkg->name);
                         if (strcmp(target, apkg->name) != 0)
                             opkg_msg(NOTICE, "\tprovides %s\n", apkg->name);
@@ -1120,7 +1120,7 @@ static int opkg_search_cmd(int argc, char **argv)
         for (iter = file_list_first(installed_files); iter;
                 iter = file_list_next(installed_files, iter)) {
             installed_file = (file_info_t *)iter->data;
-            if (fnmatch(argv[0], installed_file->path, 0) == 0)
+            if (fnmatch(argv[0], installed_file->path, opkg_config->nocase) == 0)
                 print_pkg(pkg);
         }
 
diff --git a/libopkg/opkg_conf.c b/libopkg/opkg_conf.c
index b9cc303..940648d 100644
--- a/libopkg/opkg_conf.c
+++ b/libopkg/opkg_conf.c
@@ -76,6 +76,7 @@ static opkg_option_t options[] = {
     {"download_only", OPKG_OPT_TYPE_BOOL, &_conf.download_only},
     {"download_first", OPKG_OPT_TYPE_BOOL, &_conf.download_first}, /* Not available on internal solver */
     {"nodeps", OPKG_OPT_TYPE_BOOL, &_conf.nodeps},
+    {"nocase", OPKG_OPT_TYPE_BOOL, &_conf.nocase},
     {"no_install_recommends", OPKG_OPT_TYPE_BOOL, &_conf.no_install_recommends},
     {"offline_root", OPKG_OPT_TYPE_STRING, &_conf.offline_root},
     {"overlay_root", OPKG_OPT_TYPE_STRING, &_conf.overlay_root},
diff --git a/libopkg/opkg_conf.h b/libopkg/opkg_conf.h
index 4496f2e..fcfdc4d 100644
--- a/libopkg/opkg_conf.h
+++ b/libopkg/opkg_conf.h
@@ -104,6 +104,7 @@ typedef struct opkg_conf {
     char *gpg_trust_level;
     char *signature_type;
     int nodeps;             /* do not follow dependencies */
+    int nocase;             /* perform case insensitive matching */
     int no_install_recommends;
     char *offline_root;
     char *overlay_root;
diff --git a/src/opkg.c b/src/opkg.c
index 6739832..d221076 100644
--- a/src/opkg.c
+++ b/src/opkg.c
@@ -26,6 +26,7 @@
 #include <getopt.h>
 #include <malloc.h>
 #include <stdlib.h>
+#include <fnmatch.h>
 
 #include "opkg_conf.h"
 #include "opkg_cmd.h"
@@ -55,6 +56,7 @@ enum {
     ARGS_OPT_NOACTION,
     ARGS_OPT_DOWNLOAD_ONLY,
     ARGS_OPT_NODEPS,
+    ARGS_OPT_NOCASE,
     ARGS_OPT_AUTOREMOVE,
     ARGS_OPT_VOLATILE_CACHE,
     ARGS_OPT_COMBINE,
@@ -104,6 +106,7 @@ static struct option long_options[] = {
     {"noaction", 0, 0, ARGS_OPT_NOACTION},
     {"download-only", 0, 0, ARGS_OPT_DOWNLOAD_ONLY},
     {"nodeps", 0, 0, ARGS_OPT_NODEPS},
+    {"nocase", 0, 0, ARGS_OPT_NOCASE},
     {"no-install-recommends", 0, 0, ARGS_OPT_NO_INSTALL_RECOMMENDS},
     {"offline", 1, 0, 'o'},
     {"offline-root", 1, 0, 'o'},
@@ -133,7 +136,7 @@ static int args_parse(int argc, char *argv[])
     char *solver_version = NULL;
 
     while (1) {
-        c = getopt_long_only(argc, argv, "Ad:f:no:p:l:t:vV::", long_options,
+        c = getopt_long_only(argc, argv, "Ad:f:ino:p:l:t:vV::", long_options,
                              &option_index);
         if (c == -1)
             break;
@@ -148,6 +151,9 @@ static int args_parse(int argc, char *argv[])
         case 'f':
             opkg_config->conf_file = xstrdup(optarg);
             break;
+        case 'i':
+            opkg_config->nocase = FNM_CASEFOLD;
+            break;
         case 'o':
             opkg_config->offline_root = xstrdup(optarg);
             break;
@@ -216,6 +222,9 @@ static int args_parse(int argc, char *argv[])
         case ARGS_OPT_NODEPS:
             opkg_config->nodeps = 1;
             break;
+        case ARGS_OPT_NOCASE:
+            opkg_config->nocase = FNM_CASEFOLD;
+            break;
         case ARGS_OPT_ADD_ARCH:
         case ARGS_OPT_ADD_DEST:
             tuple = xstrdup(optarg);
@@ -352,6 +361,7 @@ static void usage()
     printf("\t--size                          Print package size when listing available packages\n");
     printf("\t--download-only                 No action -- download only\n");
     printf("\t--nodeps                        Do not follow dependencies\n");
+    printf("\t--nocase                        Perform case insensitive pattern matching\n");
     printf("\t--no-install-recommends         Do not install any recommended packages\n");
     printf("\t--force-removal-of-dependent-packages\n");
     printf("\t                                Remove package and all dependencies\n");
-- 
2.7.4

