diff --git a/bit.c b/bit.c
index 690df7d..4cf40d1 100644
--- a/bit.c
+++ b/bit.c
@@ -46,7 +46,7 @@ typedef uint32_t UBits;
 
 typedef union {
   lua_Number n;
-#ifdef LUA_NUMBER_DOUBLE
+#ifdef LNUM_DOUBLE
   uint64_t b;
 #else
   UBits b;
@@ -63,24 +63,22 @@ static UBits barg(lua_State *L, int idx)
 #else
   bn.n = luaL_checknumber(L, idx);
 #endif
-#if defined(LUA_NUMBER_DOUBLE)
+#if defined(LNUM_DOUBLE)
   bn.n += 6755399441055744.0;  /* 2^52+2^51 */
 #ifdef SWAPPED_DOUBLE
   b = (UBits)(bn.b >> 32);
 #else
   b = (UBits)bn.b;
 #endif
-#elif defined(LUA_NUMBER_INT) || defined(LUA_NUMBER_LONG) || \
-      defined(LUA_NUMBER_LONGLONG) || defined(LUA_NUMBER_LONG_LONG) || \
-      defined(LUA_NUMBER_LLONG)
+#elif defined(LNUM_INT32) || defined(LNUM_INT64)
   if (sizeof(UBits) == sizeof(lua_Number))
     b = bn.b;
   else
     b = (UBits)(SBits)bn.n;
-#elif defined(LUA_NUMBER_FLOAT)
+#elif defined(LNUM_FLOAT)
 #error "A 'float' lua_Number type is incompatible with this library"
 #else
-#error "Unknown number type, check LUA_NUMBER_* in luaconf.h"
+#error "Unknown number type, check LNUM_* in luaconf.h"
 #endif
 #if LUA_VERSION_NUM < 502
   if (b == 0 && !lua_isnumber(L, idx)) {
@@ -167,7 +165,7 @@ LUALIB_API int luaopen_bit(lua_State *L)
   b = barg(L, -1);
   if (b != (UBits)1437217655L || BAD_SAR) {  /* Perform a simple self-test. */
     const char *msg = "compiled with incompatible luaconf.h";
-#ifdef LUA_NUMBER_DOUBLE
+#ifdef LNUM_DOUBLE
 #ifdef _WIN32
     if (b == (UBits)1610612736L)
       msg = "use D3DCREATE_FPU_PRESERVE with DirectX";
